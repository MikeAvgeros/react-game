{"version":3,"sources":["components/Api/Api.js","components/UI/Cards/Card.js","components/UI/Cards/GameCards.js","components/App/App.js","index.js"],"names":["api","axios","create","baseURL","GameCard","hero","useState","heroData","setHeroData","ready","setReady","setValue","useEffect","fetchApi","a","get","data","handleClick","e","value","target","className","id","name","onClick","document","getElementById","classList","toggle","Card","sx","height","CardMedia","component","image","url","alt","CardContent","backgroundColor","Typography","textAlign","marginBottom","gutterBottom","variant","Stack","direction","spacing","Button","powerstats","combat","durability","intelligence","power","speed","strength","GameCards","max","cardIds","heroes","i","randomHero","Math","floor","random","includes","push","map","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.45ff0eb8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({ baseURL: 'https://www.superheroapi.com/api.php/10227456218615364' });\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport api from \"../../Api/Api\";\r\nimport './card.css';\r\n\r\nconst GameCard = ({ hero }) => {\r\n  const [heroData, setHeroData] = useState([]);\r\n  const [ready, setReady] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const { data } = await api.get(hero);\r\n      setHeroData(data);\r\n      setReady(true);\r\n    };\r\n    fetchApi();\r\n  }, [hero]);\r\n\r\n  const handleClick = (e) => {\r\n    const { value } = e.target;\r\n    setValue(value);\r\n  };\r\n\r\n  const flip = () => {\r\n    const flipCard = document.getElementById(heroData.name)\r\n    flipCard.classList.toggle('is-flipped');\r\n  };\r\n\r\n  return ready ? (\r\n    <div className='scene'>\r\n      <div id={heroData.name} className='card' onClick={flip} >\r\n        <div className='card__face card__face--front'>\r\n          <Card sx={{height:'600'}}>\r\n          </Card>\r\n        </div>\r\n        <div className='card__face card__face--back'>\r\n          <Card sx={{height: 'fit-content' }}>\r\n            <CardMedia\r\n            component=\"img\"\r\n            height=\"300\"\r\n            image={heroData.image.url}\r\n            alt=\"hero image\"\r\n            />\r\n            <CardContent sx={{ backgroundColor: 'slategray' }}>\r\n              <Typography \r\n                sx={{ textAlign: 'center', marginBottom: 2 }} \r\n                gutterBottom \r\n                variant=\"h4\" \r\n                component=\"div\"\r\n              >\r\n                {heroData.name}\r\n              </Typography>\r\n              <Stack direction=\"column\" spacing={1}>\r\n                <Button \r\n                  onClick={handleClick} \r\n                  sx={{ backgroundColor: 'purple' }} \r\n                  variant=\"contained\"\r\n                >\r\n                  {`Combat: ${heroData.powerstats.combat}`}\r\n                </Button>\r\n                <Button \r\n                  onClick={handleClick} \r\n                  sx={{ backgroundColor: 'purple' }} \r\n                  variant=\"contained\"\r\n                >\r\n                  {`Defense: ${heroData.powerstats.durability}`}\r\n                </Button>\r\n                <Button \r\n                  onClick={handleClick} \r\n                  sx={{ backgroundColor: 'purple' }} \r\n                  variant=\"contained\"\r\n                >\r\n                  {`Intellect: ${heroData.powerstats.intelligence}`}\r\n                </Button>\r\n                <Button \r\n                  onClick={handleClick} \r\n                  sx={{ backgroundColor: 'purple' }} \r\n                  variant=\"contained\"\r\n                >\r\n                  {`Power: ${heroData.powerstats.power}`}\r\n                </Button>\r\n                <Button \r\n                  onClick={handleClick} \r\n                  sx={{ backgroundColor: 'purple' }} \r\n                  variant=\"contained\"\r\n                >\r\n                  {`Speed: ${heroData.powerstats.speed}`}\r\n                </Button>\r\n                <Button \r\n                  onClick={handleClick} \r\n                  sx={{ backgroundColor: 'purple' }} \r\n                  variant=\"contained\"\r\n                >\r\n                  {`Attack: ${heroData.powerstats.strength}`}\r\n                </Button>\r\n              </Stack>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default GameCard;\r\n","import Stack from '@mui/material/Stack'\r\nimport GameCard from './Card';\r\n\r\nconst GameCards = () => {\r\n    const cardIds = [\r\n        '01','02','03','04','05','06','07','08','09','10',\r\n        '11','12','13','14','15','16','17','18','19','20',\r\n        '21','22','23','24','25','26','27','28','29','30',\r\n        '31','32','33','34','35','36','37','38','39','40',\r\n        '41','42','43','44','45','46','47','48','49','50',\r\n    ];\r\n\r\n    const heroes = [];\r\n    let i = 0;\r\n\r\n    const getRandomIndex = (max) => {\r\n        return Math.floor(Math.random() * max);\r\n    };\r\n\r\n    while (i < 4) {\r\n        const randomIndex = getRandomIndex(20);\r\n        const randomHero = cardIds[randomIndex];\r\n\r\n        if (heroes.includes(randomHero)) continue;\r\n        heroes.push(randomHero);\r\n        i++;\r\n    }\r\n\r\n    return (\r\n        <Stack direction=\"row\" spacing={3}>\r\n            {heroes.map(hero => <GameCard key={hero} hero={hero} />)}\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default GameCards;","import GameCards from \"./../UI/Cards/GameCards\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <GameCards />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}